% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/surv_sl_grf.R
\name{predict.surv_sl_grf}
\alias{predict.surv_sl_grf}
\title{Predict with a S-learner with random survvial forest}
\usage{
\method{predict}{surv_sl_grf}(object, newdata = NULL, t0 = NULL, ...)
}
\arguments{
\item{object}{An surv_sl_grf object}

\item{newdata}{Covariate matrix to make predictions on. If null, return the tau(X) predictions on the training data}

\item{t0}{The prediction time of interest}

\item{...}{Additional arguments (currently not used)}
}
\value{
A vector of estimated conditional average treatment effects
}
\description{
Obtain estimated tau(X) using a trained S-learner with random survvial forest model
}
\details{
Remark: CATE predictions can be made at any time point on the estimated survival curve
}
\examples{
\donttest{
n <- 1000; p <- 25
t0 <- 0.2
Y.max <- 2
X <- matrix(rnorm(n * p), n, p)
W <- rbinom(n, 1, 0.5)
numeratorT <- -log(runif(n))
T <- (numeratorT / exp(1 * X[ ,1, drop = FALSE] + (-0.5 - 1 * X[ ,2, drop = FALSE]) * W)) ^ 2
failure.time <- pmin(T, Y.max)
numeratorC <- -log(runif(n))
censor.time <- (numeratorC / (4 ^ 2)) ^ (1 / 2)
Y <- pmin(failure.time, censor.time)
D <- as.integer(failure.time <= censor.time)
n.test <- 500
X.test <- matrix(rnorm(n.test * p), n.test, p)

surv.sl.grf.fit <- surv_sl_grf(X, Y, W, D, t0)
cate <- predict(surv.sl.grf.fit)
cate.test <- predict(surv.sl.grf.fit, X.test)
}

}
