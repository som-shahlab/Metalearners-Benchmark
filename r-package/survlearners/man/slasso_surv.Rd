% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slasso_surv.R
\name{slasso_surv}
\alias{slasso_surv}
\title{S-learner of lasso}
\usage{
slasso_surv(
  x,
  w,
  y,
  D,
  times,
  alpha = 1,
  k_folds = NULL,
  foldid = NULL,
  lambda = NULL,
  lambda_choice = "lambda.min",
  penalty_factor = NULL
)
}
\arguments{
\item{x}{The baseline covariates}

\item{w}{The treatment variable (0 or 1)}

\item{y}{The follow-up time}

\item{D}{The event indicator}

\item{times}{The prediction time of interest}

\item{alpha}{Mix tuning parameter for the elastic net}

\item{k_folds}{Number of folds for cross validation}

\item{foldid}{User-supplied foldid. Must have length equal to length(w). If provided, it overrides the k_folds option.}

\item{lambda}{User-supplied lambda sequence for cross validation}

\item{lambda_choice}{How to cross-validate; choose from "lambda.min" or "lambda.1se"}

\item{penalty_factor}{User-supplied penalty factor, must be of length the same as number of features in x}
}
\value{
a slasso_surv object
}
\description{
S-learner, implemented via glmnet (lasso)
}
\examples{
\dontrun{
n = 1000; p = 25
times = 0.2
Y.max <- 2
X <- matrix(rnorm(n * p), n, p)
W <- rbinom(n, 1, 0.5)
numeratorT <- -log(runif(n))
T <- (numeratorT / exp(1 * X[,1] + (-0.5 - 1 * X[,2]) * W))^2
failure.time <- pmin(T, Y.max)
numeratorC <- -log(runif(n))
censor.time <- (numeratorC/(4^2))^(1/2)
Y <- pmin(failure.time, censor.time)
D <- as.integer(failure.time <= censor.time)

slasso_surv_fit = slasso_surv(x, w, y, D, times)
slasso_surv_cate = predict(slasso_surv_fit, x, times)
}
}
