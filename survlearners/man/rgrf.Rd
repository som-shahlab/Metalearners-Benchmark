% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rgrf.R
\name{rgrf}
\alias{rgrf}
\title{R-learner, implemented via xgboost (boosting)}
\usage{
rgrf(
  x,
  w,
  y,
  D,
  times = NULL,
  k_folds = NULL,
  p_hat = NULL,
  m_hat = NULL,
  c_hat = NULL,
  failure.times = NULL,
  num.trees = 2000,
  sample.weights = NULL,
  clusters = NULL,
  equalize.cluster.weights = FALSE,
  sample.fraction = 0.5,
  mtry = min(ceiling(sqrt(ncol(x)) + 20), ncol(x)),
  min.node.size = 5,
  honesty = TRUE,
  honesty.fraction = 0.5,
  honesty.prune.leaves = TRUE,
  alpha = 0.05,
  imbalance.penalty = 0,
  stabilize.splits = TRUE,
  ci.group.size = 2,
  tune.parameters = "none",
  compute.oob.predictions = TRUE,
  num.threads = NULL,
  seed = runif(1, 0, .Machine$integer.max),
  cen_fit = "KM",
  meta_learner = TRUE,
  verbose = FALSE
)
}
\arguments{
\item{x}{the input features}

\item{w}{the treatment variable (0 or 1)}

\item{y}{the observed response (real valued)}

\item{k_folds}{number of folds used for cross fitting and cross validation}

\item{p_hat}{pre-computed estimates on E(W|X) corresponding to the input x. rboost will compute it internally if not provided.}

\item{m_hat}{pre-computed estimates on E(Y|X) corresponding to the input x. rboost will compute it internally if not provided.}

\item{verbose}{boolean; whether to print statistic}

\item{ntrees_max}{the maximum number of trees to grow for xgboost}

\item{num_search_rounds}{the number of random sampling of hyperparameter combinations for cross validating on xgboost trees}

\item{print_every_n}{the number of iterations (in each iteration, a tree is grown) by which the code prints out information}

\item{early_stopping_rounds}{the number of rounds the test error stops decreasing by which the cross validation in finding the optimal number of trees stops}

\item{nthread}{the number of threads to use. The default is NULL, which uses all available threads}
}
\description{
R-learner, as proposed by Nie and Wager (2017), implemented via xgboost (boosting)
}
\examples{
\dontrun{
n = 100; p = 10

x = matrix(rnorm(n*p), n, p)
w = rbinom(n, 1, 0.5)
y = pmax(x[,1], 0) * w + x[,2] + pmin(x[,3], 0) + rnorm(n)

rboost_fit = rboost(x, w, y)
rboost_est = predict(rboost_fit, x)
}

}
